class WotCapability {
  final String type;
  final String description;
  final List<String> supportedProperties;
  final List<String> supportedActions;
  final String version;
  final List<String> dependencies;

  const WotCapability({
    required this.type,
    required this.description,
    this.supportedProperties = const [],
    this.supportedActions = const [],
    this.version = '1.0.0',
    this.dependencies = const [],
  });

  Map<String, dynamic> toJson() => {
        'type': type,
        'description': description,
        'supportedProperties': supportedProperties,
        'supportedActions': supportedActions,
      };
}

const List<WotCapability> wellknownWotCapabilities = [
  WotCapability(
    type: 'OnOffSwitch',
    description: 'Supports on/off functionality',
    supportedProperties: ['on'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'Light',
    description: 'Supports brightness adjustment for lights',
    supportedProperties: ['brightness'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['OnOffSwitch'],
  ),
  WotCapability(
    type: 'ColorControl',
    description: 'Supports color control (e.g., RGB or color temperature)',
    supportedProperties: ['color'],
    supportedActions: ['fade'],
    version: '1.0.0',
    dependencies: ['Light'],
  ),
  WotCapability(
    type: 'MultiLevelSwitch',
    description: 'Supports multi-level adjustments (e.g., brightness, volume)',
    supportedProperties: ['level'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'BinarySensor',
    description: 'Binary sensor (e.g., on/off state)',
    supportedProperties: ['state'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'MultiLevelSensor',
    description: 'Multi-level sensor (e.g., temperature, humidity)',
    supportedProperties: ['value'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'SmartPlug',
    description: 'Smart plug with on/off and power monitoring',
    supportedProperties: ['on', 'power'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['OnOffSwitch'],
  ),
  WotCapability(
    type: 'Camera',
    description: 'Camera supporting video stream or snapshots',
    supportedProperties: ['stream'],
    supportedActions: ['capture'],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'Thermostat',
    description: 'Thermostat with temperature setting and monitoring',
    supportedProperties: ['temperature', 'targetTemperature'],
    supportedActions: ['setTemperature'],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'Lock',
    description: 'Smart lock with lock/unlock functionality',
    supportedProperties: ['locked'],
    supportedActions: ['lock', 'unlock'],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'Alarm',
    description: 'Alarm with trigger functionality',
    supportedProperties: ['alarm'],
    supportedActions: ['trigger'],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'MotionSensor',
    description: 'Motion sensor detecting movement',
    supportedProperties: ['motion'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['BinarySensor'],
  ),
  WotCapability(
    type: 'DoorSensor',
    description: 'Door/window sensor detecting open/close',
    supportedProperties: ['open'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['BinarySensor'],
  ),
  WotCapability(
    type: 'LeakSensor',
    description: 'Leak sensor detecting water presence',
    supportedProperties: ['leak'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['BinarySensor'],
  ),
  WotCapability(
    type: 'TemperatureSensor',
    description: 'Temperature sensor measuring temperature',
    supportedProperties: ['temperature'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['MultiLevelSensor'],
  ),
  WotCapability(
    type: 'HumiditySensor',
    description: 'Humidity sensor measuring humidity',
    supportedProperties: ['humidity'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['MultiLevelSensor'],
  ),
  WotCapability(
    type: 'AirQualitySensor',
    description: 'Air quality sensor measuring metrics (e.g., PM2.5)',
    supportedProperties: ['airQuality'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['MultiLevelSensor'],
  ),
  WotCapability(
    type: 'Fan',
    description: 'Fan with on/off and speed control',
    supportedProperties: ['on', 'speed'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: ['OnOffSwitch'],
  ),
  WotCapability(
    type: 'Valve',
    description: 'Valve with open/close or adjustment',
    supportedProperties: ['open'],
    supportedActions: ['open', 'close'],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'EnergyMonitor',
    description: 'Energy monitor for power or energy usage',
    supportedProperties: ['power', 'energy'],
    supportedActions: [],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'PushButton',
    description: 'Physical button with press action',
    supportedProperties: [],
    supportedActions: ['press'],
    version: '1.0.0',
    dependencies: [],
  ),
  WotCapability(
    type: 'VideoCamera',
    description: 'Video camera supporting recording or streaming',
    supportedProperties: ['stream'],
    supportedActions: ['record', 'stop'],
    version: '1.0.0',
    dependencies: ['Camera'],
  ),
];
